{"version":3,"sources":["Book.js","BooksAPI.js","SearchPage.js","MainPage.js","App.js","index.js"],"names":["Book","_this","this","displayedThumbnail","props","book","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","concat","onChange","event","moveShelf","target","value","currentShelf","disabled","title","authors","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchPage","state","searchedBooks","updateQuery","setState","updateSearchedBooks","BooksAPI","error","_this2","Link","to","type","placeholder","map","searchedBook","key","src_Book","MainPage","filter","BooksApp","_this3","Route","exact","path","render","src_MainPage","src_SearchPage","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.51a003ba.chunk.js","sourcesContent":["import React , {Component} from \"react\"\r\n\r\nclass Book extends Component {\r\n  render(){\r\n    let displayedThumbnail = this.props.book.imageLinks\r\n    if(displayedThumbnail){\r\n      displayedThumbnail = this.props.book.imageLinks.thumbnail\r\n    }else {\r\n      displayedThumbnail = ''\r\n    }\r\n    return(\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${displayedThumbnail}\")` }}></div>\r\n          <div className=\"book-shelf-changer\">\r\n            <select\r\n            onChange={(event) => this.props.moveShelf(\r\n              this.props.book,event.target.value\r\n            )}\r\n            value={this.props.currentShelf}\r\n            >\r\n              <option value=\"move\" disabled>Move to...</option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{this.props.book.title}</div>\r\n        <div className=\"book-authors\">{this.props.book.authors}</div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Book\r\n","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React , {Component} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport Book from \"./Book\"\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    query:\"\",\r\n    searchedBooks:[]\r\n  }\r\n  updateQuery = (query) => {\r\n    this.setState({ query: query })\r\n    this.updateSearchedBooks(query)\r\n  }\r\n  updateSearchedBooks = (query) => {\r\n    if(query){\r\n      BooksAPI.search(query).then((searchedBooks) => {\r\n        if(searchedBooks.error){\r\n          this.setState({searchedBooks:[] })\r\n        }else {\r\n          this.setState({searchedBooks : searchedBooks})\r\n        }\r\n      })\r\n    }else {\r\n      this.setState({searchedBooks:[] })\r\n    }\r\n\r\n  }\r\n  render(){\r\n\r\n    return(\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n\r\n          <Link\r\n          to=\"/\"\r\n          className=\"close-search\" >Close</Link>\r\n\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title or author\"\r\n            value={this.state.query}\r\n            onChange={(event)=> this.updateQuery(event.target.value)}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-books-results\">\r\n\r\n          <ol className=\"books-grid\">\r\n          {this.state.searchedBooks.map(searchedBook => {\r\n            let shelf = \"none\"\r\n            this.props.books.map(book => (\r\n              book.id === searchedBook.id ? shelf = book.shelf : ''\r\n            ))\r\n            return (\r\n              <li key={searchedBook.id}>\r\n              <Book\r\n              book={searchedBook}\r\n              moveShelf={this.props.moveShelf}\r\n              currentShelf={shelf}\r\n              />\r\n              </li>\r\n            )\r\n          })\r\n      }\r\n          </ol>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchPage\r\n","import React , {Component} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport Book from \"./Book\"\r\nclass MainPage extends Component {\r\n  render(){\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {this.props.books.filter(book => book.shelf === 'currentlyReading' ).map(book => (\r\n                  <li key={book.id}>\r\n                    <Book\r\n                    book={book}\r\n                    moveShelf={this.props.moveShelf}\r\n                    currentShelf=\"currentlyReading\"/>\r\n                  </li>\r\n                ))\r\n              }\r\n\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n\r\n                {this.props.books.filter(book => book.shelf === 'wantToRead' ).map(book => (\r\n                  <li key={book.id}>\r\n                    <Book\r\n                    book={book}\r\n                    moveShelf= {this.props.moveShelf}\r\n                    currentShelf=\"wantToRead\"/>\r\n                  </li>\r\n                ))\r\n              }\r\n\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {this.props.books.filter(book => book.shelf === 'read' ).map(book => (\r\n                  <li key={book.id}>\r\n                    <Book\r\n                    book={book}\r\n                    moveShelf= {this.props.moveShelf}\r\n                    currentShelf=\"read\"/>\r\n                  </li>\r\n                ))\r\n              }\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\"><button>Add a book</button></Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainPage","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport SearchPage from \"./SearchPage\"\r\nimport MainPage from \"./MainPage\"\r\n\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books:[]\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({books})\r\n    })\r\n\r\n  }\r\n\r\n  moveShelf = (book,shelf) => {\r\n    BooksAPI.update(book,shelf).then((books) => (\r\n      BooksAPI.getAll().then((books) => {\r\n        this.setState({books})\r\n      })\r\n    ))\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"app\">\r\n      <Route exact path='/' render={() => (\r\n        <MainPage\r\n        books={this.state.books}\r\n        moveShelf={this.moveShelf}\r\n         />\r\n        )} />\r\n\r\n        <Route exact path='/search' render={() => (\r\n          <SearchPage\r\n          moveShelf={this.moveShelf}\r\n          books={this.state.books} />\r\n\r\n          )} />\r\n\r\n          </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter} from\"react-router-dom\"\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}